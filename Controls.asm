;SAMEH & MAHMOUD
;11/12/2016
;CONTROLS OF THE GAME AND KEY STROKS DETECTION
;===============================================

INCLUDE Util.asm
EXTRN CURRENT_ACTION:BYTE
EXTRN PLAYER1CENTER:WORD
EXTRN P1OFFSET:BYTE
EXTRN P2OFFSET:BYTE
EXTRN RETURN_VAR:BYTE
PUBLIC CONTROLS

.MODEL SMALL
.STACK 64
.DATA
	STR1 DB 'CALL SCAN_CODE$'
	STR2 DB 'ESCAPE$'
	STR3 DB 'P PRESSED$'
	DUMMY DB '00$'
.CODE
CONTROLS PROC FAR
	MOV AX,@DATA
	MOV DS,AX
	;SET_CURSOR 0,0
	;WRITE_STRING STR1
	CALL SCAN_CODE
	RET
CONTROLS ENDP

SCAN_CODE PROC NEAR 
AGAIN:

MOV AH,1
INT 16H

;SET_CURSOR 0,0
;MOV SI,OFFSET DUMMY
;MOV [SI],AH
;INC SI
;MOV [SI],AL
;WRITE_STRING DUMMY
        CMP AH,3EH
        JE P
        CMP AL,1Bh
        JE ESCAPE
        CMP AL,'A'
        JE L
	CMP AL,'a'
        JE L
        CMP AL,'D'
        JE R
	CMP AL,'d'
        JE R
        CMP AL,'W'
        JE U
        CMP AL,'w'
        JE U
	CMP AL,'S'
        JE D
	CMP AL,'s'
        JE D
	CMP AH,3DH
        JE RETURN_F3

	JMP EXIT
 ESCAPE:
    MOV CURRENT_ACTION, 'E'
	SET_CURSOR 0,0
	WRITE_STRING STR2
	MOV AH,4CH
	INT 21H
    JMP REST
 P:
    MOV CURRENT_ACTION, 'P'
	SET_CURSOR 0,20
	WRITE_STRING STR3
    JMP REST
 L:
    MOV CURRENT_ACTION, 'L'
	CALL LEFT
    JMP REST
 R:
    MOV CURRENT_ACTION, 'R'
	CALL RIGHT
    JMP REST
 U:
    MOV CURRENT_ACTION, 'U'
	CALL UP
    JMP REST
 D:
    MOV CURRENT_ACTION, 'D'
	CALL DOWN
    JMP REST
 NO:
    MOV CURRENT_ACTION, 0
    JMP REST
RETURN_F3:
	MOV AL,1
	MOV RETURN_VAR,AL
	JMP REST
 Rest:
      mov ah,0
      int 16h 
 EXIT:
 RET
 SCAN_CODE ENDP 

RIGHT PROC NEAR
	MOV AX,PLAYER1CENTER
	CMP AL,10
	JE EXIT_RIGHT
	MOV BX,PLAYER1CENTER
	SET_CURSOR BH,BL
	CLEAR_OBJECT_LOCATION
	INC AL
	MOV PLAYER1CENTER,AX
EXIT_RIGHT:
	RET
RIGHT ENDP

LEFT PROC NEAR
	MOV AX,PLAYER1CENTER
	CMP AL,0
	JE EXIT_LEFT
	MOV BX,PLAYER1CENTER
	SET_CURSOR BH,BL
	CLEAR_OBJECT_LOCATION
	DEC AL
	MOV PLAYER1CENTER,AX
EXIT_LEFT:
	RET
LEFT ENDP

UP PROC NEAR
	MOV AX,PLAYER1CENTER
	CMP AH,P1OFFSET
	JE EXIT_UP
	MOV BX,PLAYER1CENTER
	SET_CURSOR BH,BL
	CLEAR_OBJECT_LOCATION
	DEC AH
	MOV PLAYER1CENTER,AX
EXIT_UP:
	RET
UP ENDP

DOWN PROC NEAR
	MOV AX,PLAYER1CENTER
	MOV BL,P1OFFSET
	ADD BL,6
	CMP BL,AH
	JE EXIT_DOWN
	MOV BX,PLAYER1CENTER
	SET_CURSOR BH,BL
	CLEAR_OBJECT_LOCATION
	INC AH
	MOV PLAYER1CENTER,AX
EXIT_DOWN:
	RET
DOWN ENDP

END









