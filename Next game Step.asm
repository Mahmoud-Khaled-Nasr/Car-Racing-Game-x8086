;Amir Farag
;9/12/2016
;Move blocks & coins during the game
;=======================================
INCLUDE Util.asm
EXTRN PLAYER1OBJECTS:WORD
EXTRN PLAYER2OBJECTS:WORD
EXTRN P1OFFSET:BYTE
EXTRN P2OFFSET:BYTE
PUBLIC MOVE

STEP MACRO ARRAY
	LOCAL START,NOT_VALID,INCREMENT,EXIT

			MOV SI,0H
	;NOTE: this code can be for 1array only and used twice for the 2 of them
START:   		MOV AX,ARRAY[SI]
			
			CMP AX,0FFFFH 
			JZ EXIT
			CMP AX,0
			JE EXIT
			MOV DX,1
			AND DX,AX
			JZ INCREMENT
	;NOTE: P1B1 IS A WORD NOT BYTE 
			MOV CL,AL		
			AND AL,00011100B
	;NOTE: SHIFTING REQUIRED AS U SUB FROM THE SPEED SHIFTED TO THE RIGHT
			SHR AL,1
			SHR AL,1
	;NOTE: WHAT IF THE RESULT IS NEGATIVE OR IN THAT CASE NOT ZERO
			CMP AH,AL
			JB NOT_VALID
	        	SUB AH,AL
	;RETURN THE NEW VALUE TO THE ARRAY
			MOV AL,CL
        		MOV ARRAY[SI],AX
			JMP INCREMENT
NOT_VALID:
	;SET THE OBJECT TO BE IN VALID
	    		MOV AL,CL
            		AND AL,11111110B
            		MOV ARRAY[SI],AX
INCREMENT:
	     		INC SI
			INC SI
			JMP START
EXIT:
ENDM

CLEAR_SCREEN MACRO ARRAY,OFFSET
	LOCAL EXIT,CLEAR,INCREMENT
		MOV SI,0
CLEAR:
		MOV BX,ARRAY[SI]
		CMP BX,0FFFFH
		JE EXIT
		CMP BX,0
		JE EXIT
		MOV CX,1
		AND CX,BX
		JZ INCREMENT
		AND BL,11100000B
		SHR BL,1
		SHR BL,1
		SHR BL,1
		SHR BL,1
		SHR BL,1
		ADD BL,OFFSET
		SET_CURSOR BL,BH
		MOV AH,09
		MOV BH,0
		MOV CX,1
		MOV AL,' '
		MOV BL,00000000B ;GREEN FOR TESTING
		INT 10H
INCREMENT:
		INC SI
		INC SI
		JMP CLEAR
EXIT:
	
ENDM 

		.MODEL SMALL
		.STACK 64
		.DATA
		.CODE		
MOVE PROC FAR
		CLEAR_SCREEN PLAYER1OBJECTS,P1OFFSET
		CLEAR_SCREEN PLAYER2OBJECTS,P2OFFSET
		
		STEP PLAYER1OBJECTS
		STEP PLAYER2OBJECTS		
		       
		RET
MOVE	    ENDP
END

